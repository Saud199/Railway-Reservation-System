/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package railwayreservationsystem;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class BookTicket extends javax.swing.JFrame {

    /**
     * Creates new form BookTicket
     */
    
        String from;
        String to;
        String pass_id;
        
        String t_id;
        
        int emptycount=0;
        
        int check=0;
        String trainID_check;
        String passengerName_check;
    
    public BookTicket() {
        initComponents();
            DB_Connection.DB_Connection obj_DB_Connection=new DB_Connection.DB_Connection();
            Connection connection=obj_DB_Connection.get_connection();
            PreparedStatement ps=null;
        try {
                String query="select Train_id from Train";
                ps=connection.prepareStatement(query);
                ResultSet rs=ps.executeQuery();
                
                while(rs.next()){
                    pass_train_id.addItem(""+rs.getString("Train_id"));
                }
                
            }catch(Exception e) {
                JOptionPane.showMessageDialog(null,""+e);
            }
        
        if (pass_train_id.getSelectedIndex() == -1) {
            pass_train_id.addItem("No Trains Available");
            t_id="No Trains Available";
        }
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pass_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pass_age = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pass_gender = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        pass_train_id = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        pass_class = new javax.swing.JComboBox<>();
        bookticketBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Railway Reservation System");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_icon.png"))); // NOI18N
        jButton1.setText("Go Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ravie", 1, 18)); // NOI18N
        jLabel1.setText("Book Tickets");

        jLabel2.setText("Passenger Name");

        jLabel3.setText("Age");

        jLabel4.setText("Gender");

        pass_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel5.setText("Train ID");

        pass_train_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_train_idActionPerformed(evt);
            }
        });

        jLabel6.setText("Class");

        pass_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy Class", "Business Class", "First Class" }));

        bookticketBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/book_ticket.png"))); // NOI18N
        bookticketBtn.setText("Book Ticket");
        bookticketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookticketBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pass_name)
                            .addComponent(pass_age, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(pass_class, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pass_train_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pass_gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookticketBtn))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pass_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(pass_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pass_train_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(bookticketBtn)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        UserHome u_home = new UserHome();
        u_home.setLocationRelativeTo(null);
        u_home.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bookticketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookticketBtnActionPerformed
        String name = pass_name.getText().toString();
        String age = pass_age.getText().toString();
        String gender = pass_gender.getSelectedItem().toString();
        t_id = pass_train_id.getSelectedItem().toString();
        String pclass = pass_class.getSelectedItem().toString();
        
        if (name.length()==0 || age.length()==0 || gender.length()==0 || t_id.length()==0 || pclass.length()==0) {
            JOptionPane.showMessageDialog(null,"Please fill out all the fields");
        }
       
        else if (pass_train_id.getSelectedItem().toString().equalsIgnoreCase("No Trains Available")) {
            JOptionPane.showMessageDialog(null,"Sorry, No Trains are available");
        }
        
        else {
            DB_Connection.DB_Connection obj_DB_Connection=new DB_Connection.DB_Connection();
            Connection connection=obj_DB_Connection.get_connection();
            PreparedStatement ps=null;
            
            try {
                
                emptycount=0;
                
                String qry = "SELECT count(*) From Passenger";
                ps=connection.prepareStatement(qry);
                ResultSet rs11=ps.executeQuery();
                while(rs11.next()) {
                    emptycount=rs11.getInt("count(*)");
                }
            
                if (emptycount==0) {
                    String sql = "INSERT INTO Passenger (P_Name,P_Age,P_Gender,Destination_From,Destination_To,User_id,Class,Train_id)" +"VALUES (?,?,?,?,?,?,?,?)";
                    
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, ""+name);
                    preparedStatement.setString(2, ""+age);
                    preparedStatement.setString(3, ""+gender);
                    preparedStatement.setString(4, ""+from);
                    preparedStatement.setString(5, ""+to);
                    preparedStatement.setString(6, ""+getUserName.u_id);
                    preparedStatement.setString(7, ""+pclass);
                    preparedStatement.setString(8, ""+t_id);
                    preparedStatement.executeUpdate();
                    
                    String query1="select P_id from Passenger where P_Name='"+name+"' AND Train_id="+t_id;
                    ps=connection.prepareStatement(query1);
                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        pass_id = ""+rs.getString("P_id");
                    }
                    
                    String sql1="INSERT INTO BookedTickets (P_id,P_Name,Destination_From,Destination_To,Train_id,User_id)" +"VALUES(?,?,?,?,?,?)";
                    PreparedStatement preparedStatement1 = connection.prepareStatement(sql1);
                    preparedStatement1.setString(1, ""+pass_id);
                    preparedStatement1.setString(2, ""+name);
                    preparedStatement1.setString(3, ""+from);
                    preparedStatement1.setString(4, ""+to);
                    preparedStatement1.setString(5, ""+t_id);             
                    preparedStatement1.setString(6, ""+getUserName.u_id);
                    preparedStatement1.executeUpdate();
                
                    JOptionPane.showMessageDialog(null,"Your ticket has been booked");
                    
                }
                
                else {
                    
                    String sql = "INSERT INTO Passenger (P_Name,P_Age,P_Gender,Destination_From,Destination_To,User_id,Class,Train_id)" +"VALUES (?,?,?,?,?,?,?,?)";
                            
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, ""+name);
                    preparedStatement.setString(2, ""+age);
                    preparedStatement.setString(3, ""+gender);
                    preparedStatement.setString(4, ""+from);
                    preparedStatement.setString(5, ""+to);
                    preparedStatement.setString(6, ""+getUserName.u_id);
                    preparedStatement.setString(7, ""+pclass);
                    preparedStatement.setString(8, ""+t_id);
                    preparedStatement.executeUpdate();
                    
                    String query1="select P_id from Passenger where P_Name='"+name+"' AND Train_id="+t_id;
                    ps=connection.prepareStatement(query1);
                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        pass_id = ""+rs.getString("P_id");
                    }
                    
                    String sql1="INSERT INTO BookedTickets (P_id,P_Name,Destination_From,Destination_To,Train_id,User_id)" +"VALUES(?,?,?,?,?,?)";
                    PreparedStatement preparedStatement1 = connection.prepareStatement(sql1);
                    preparedStatement1.setString(1, ""+pass_id);
                    preparedStatement1.setString(2, ""+name);
                    preparedStatement1.setString(3, ""+from);
                    preparedStatement1.setString(4, ""+to);
                    preparedStatement1.setString(5, ""+t_id);             
                    preparedStatement1.setString(6, ""+getUserName.u_id);
                    preparedStatement1.executeUpdate();
                
                    JOptionPane.showMessageDialog(null,"Your ticket has been booked");
                    
                }
                
            }catch(Exception e) {
                JOptionPane.showMessageDialog(null,""+e);
            }
            
            
        }
        
    }//GEN-LAST:event_bookticketBtnActionPerformed

    private void pass_train_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_train_idActionPerformed
        String item_id = pass_train_id.getSelectedItem().toString();
        
        DB_Connection.DB_Connection obj_DB_Connection=new DB_Connection.DB_Connection();
	Connection connection=obj_DB_Connection.get_connection();
	PreparedStatement ps=null;
        
        try {
	    String query="select Destination_From,Destination_To from Train where Train_id="+item_id;
	    ps=connection.prepareStatement(query);
	    ResultSet rs=ps.executeQuery();
	    while(rs.next()){
                from=""+rs.getString("Destination_From");
                to=""+rs.getString("Destination_To");
	    }
	} catch (Exception e) {
	    JOptionPane.showMessageDialog(null,""+e);
	}
        
    }//GEN-LAST:event_pass_train_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookticketBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField pass_age;
    private javax.swing.JComboBox<String> pass_class;
    private javax.swing.JComboBox<String> pass_gender;
    private javax.swing.JTextField pass_name;
    private javax.swing.JComboBox<String> pass_train_id;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/app_icon.png")));
    }
}
